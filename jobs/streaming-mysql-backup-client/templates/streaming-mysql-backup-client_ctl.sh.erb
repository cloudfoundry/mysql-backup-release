#!/bin/bash

set -eux

pid="$$"
pgid_from_pid() {
  ps -o pgid= "$1" 2>/dev/null | egrep -o "[0-9]+"
}

# If process group id does not match process id, exec setsid to create a new process group
# starting at this process
if [ "${pid}" != "$(pgid_from_pid ${pid})" ]; then
    exec setsid "$0" "$@"
fi

# When we are killed, ensure that all of our child processes are also killed so they are not left running
function cleanup {
  kill -- -${pid}
}
trap cleanup EXIT

# add xtrabackup to path
export PATH=<%= p('cf-mysql-backup.xtrabackup_path') %>:$PATH

log_dir=/var/vcap/sys/log/streaming-mysql-backup-client
mkdir -p $log_dir

package_dir=/var/vcap/packages/streaming-mysql-backup-client
job_dir=/var/vcap/jobs/streaming-mysql-backup-client
config_path=$job_dir/config/streaming-mysql-backup-client.yml

output_dir="<%= p('cf-mysql-backup.backup-client.output_folder') %>"
tmp_dir="<%= p('cf-mysql-backup.backup-client.tmp_folder') %>"
mkdir -p "${output_dir}"
mkdir -p "${tmp_dir}"

executable_name=streaming-mysql-backup-client
executable=$package_dir/bin/$executable_name



pushd $package_dir

  $executable \
      -configPath=$config_path $@ \
      >>$log_dir/streaming-mysql-backup-client.stdout.log 2>>$log_dir/streaming-mysql-backup-client.stderr.log

popd

echo "Successfully retrieved and prepared backup"
