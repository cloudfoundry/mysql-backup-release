// Code generated by counterfeiter. DO NOT EDIT.
package clientfakes

import (
	"sync"

	"github.com/cloudfoundry/streaming-mysql-backup-client/client"
)

type FakeGaleraAgentCallerInterface struct {
	WsrepLocalIndexStub        func(string) (int, error)
	wsrepLocalIndexMutex       sync.RWMutex
	wsrepLocalIndexArgsForCall []struct {
		arg1 string
	}
	wsrepLocalIndexReturns struct {
		result1 int
		result2 error
	}
	wsrepLocalIndexReturnsOnCall map[int]struct {
		result1 int
		result2 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeGaleraAgentCallerInterface) WsrepLocalIndex(arg1 string) (int, error) {
	fake.wsrepLocalIndexMutex.Lock()
	ret, specificReturn := fake.wsrepLocalIndexReturnsOnCall[len(fake.wsrepLocalIndexArgsForCall)]
	fake.wsrepLocalIndexArgsForCall = append(fake.wsrepLocalIndexArgsForCall, struct {
		arg1 string
	}{arg1})
	stub := fake.WsrepLocalIndexStub
	fakeReturns := fake.wsrepLocalIndexReturns
	fake.recordInvocation("WsrepLocalIndex", []interface{}{arg1})
	fake.wsrepLocalIndexMutex.Unlock()
	if stub != nil {
		return stub(arg1)
	}
	if specificReturn {
		return ret.result1, ret.result2
	}
	return fakeReturns.result1, fakeReturns.result2
}

func (fake *FakeGaleraAgentCallerInterface) WsrepLocalIndexCallCount() int {
	fake.wsrepLocalIndexMutex.RLock()
	defer fake.wsrepLocalIndexMutex.RUnlock()
	return len(fake.wsrepLocalIndexArgsForCall)
}

func (fake *FakeGaleraAgentCallerInterface) WsrepLocalIndexCalls(stub func(string) (int, error)) {
	fake.wsrepLocalIndexMutex.Lock()
	defer fake.wsrepLocalIndexMutex.Unlock()
	fake.WsrepLocalIndexStub = stub
}

func (fake *FakeGaleraAgentCallerInterface) WsrepLocalIndexArgsForCall(i int) string {
	fake.wsrepLocalIndexMutex.RLock()
	defer fake.wsrepLocalIndexMutex.RUnlock()
	argsForCall := fake.wsrepLocalIndexArgsForCall[i]
	return argsForCall.arg1
}

func (fake *FakeGaleraAgentCallerInterface) WsrepLocalIndexReturns(result1 int, result2 error) {
	fake.wsrepLocalIndexMutex.Lock()
	defer fake.wsrepLocalIndexMutex.Unlock()
	fake.WsrepLocalIndexStub = nil
	fake.wsrepLocalIndexReturns = struct {
		result1 int
		result2 error
	}{result1, result2}
}

func (fake *FakeGaleraAgentCallerInterface) WsrepLocalIndexReturnsOnCall(i int, result1 int, result2 error) {
	fake.wsrepLocalIndexMutex.Lock()
	defer fake.wsrepLocalIndexMutex.Unlock()
	fake.WsrepLocalIndexStub = nil
	if fake.wsrepLocalIndexReturnsOnCall == nil {
		fake.wsrepLocalIndexReturnsOnCall = make(map[int]struct {
			result1 int
			result2 error
		})
	}
	fake.wsrepLocalIndexReturnsOnCall[i] = struct {
		result1 int
		result2 error
	}{result1, result2}
}

func (fake *FakeGaleraAgentCallerInterface) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.wsrepLocalIndexMutex.RLock()
	defer fake.wsrepLocalIndexMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeGaleraAgentCallerInterface) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ client.GaleraAgentCallerInterface = new(FakeGaleraAgentCallerInterface)
